{"version":3,"file":"static/js/158.c304c602.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/Accordion/Accordion.js","../node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","../node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","../node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/Collapse/Collapse.js","../node_modules/@material-ui/core/esm/Icon/Icon.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/utils/isMuiElement.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/Step/stepClasses.js","../node_modules/@mui/material/Step/Step.js","../node_modules/@mui/material/Step/StepContext.js","../node_modules/@mui/material/internal/svg-icons/CheckCircle.js","../node_modules/@mui/material/internal/svg-icons/Warning.js","../node_modules/@mui/material/StepIcon/stepIconClasses.js","../node_modules/@mui/material/StepIcon/StepIcon.js","../node_modules/@mui/material/StepLabel/stepLabelClasses.js","../node_modules/@mui/material/StepLabel/StepLabel.js","../node_modules/@mui/material/Stepper/stepperClasses.js","../node_modules/@mui/material/StepConnector/stepConnectorClasses.js","../node_modules/@mui/material/StepConnector/StepConnector.js","../node_modules/@mui/material/Stepper/Stepper.js","../node_modules/@mui/material/Stepper/StepperContext.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the accordion will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused, &$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$IconButtonProp = props.IconButtonProps,\n      IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp,\n      onClick = props.onClick,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"IconButtonProps\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),\n    focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    // Guard against when generation of classes is disabled in the stylesheets (`disableGeneration`).\n    // For `disableGeneration` we don't have an accurate warning but `disableGeneration` is an advanced use case anyway.\n    if (props.classes.focused !== undefined && props.classes.focused.indexOf(' ') !== -1) {\n      return new Error(['Material-UI: The `classes.focused` key is deprecated.', 'Use `classes.focusVisible` instead.', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the root element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the root element when the transition has exited and `collapsedSize` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = /*#__PURE__*/React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapsedHeight = props.collapsedHeight,\n      _props$collapsedSize = props.collapsedSize,\n      collapsedSizeProp = _props$collapsedSize === void 0 ? '0px' : _props$collapsedSize,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableStrictM = props.disableStrictModeCompat,\n      disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"collapsedSize\", \"component\", \"disableStrictModeCompat\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedSize = typeof (collapsedHeight || collapsedSizeProp) === 'number' ? \"\".concat(collapsedHeight || collapsedSizeProp, \"px\") : collapsedHeight || collapsedSizeProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;\n  var nodeRef = React.useRef(null);\n  var handleRef = useForkRef(ref, enableStrictModeCompat ? nodeRef : undefined);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (nodeOrAppearing, maybeAppearing) {\n      if (callback) {\n        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing],\n            _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n\n        if (isAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    node.style.height = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(function (node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n  var handleExiting = normalizedTransitionCallback(function (node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedSize;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  var addEndListener = function addEndListener(nodeOrNext, maybeNext) {\n    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;\n\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.root, classes.container, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedSize === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedSize\n      }, style),\n      ref: handleRef\n    }, childProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    if (props.classes && props.classes.container) {\n      throw new Error(['Material-UI: the classes.container key is deprecated.', 'Use `classes.root` instead', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   * @deprecated The prop was renamed to support the addition of horizontal orientation, use `collapsedSize` instead.\n   */\n  collapsedHeight: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'The prop was renamed to support the vertical orientation, use `collapsedSize` instead'),\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Enable this prop if you encounter 'Function components cannot be given refs',\n   * use `unstable_createStrictModeTheme`,\n   * and can't forward the ref in the passed `Component`.\n   */\n  disableStrictModeCompat: PropTypes.bool,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      fontSize: theme.typography.pxToRem(24),\n      width: '1em',\n      height: '1em',\n      // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n      // To remove at some point.\n      overflow: 'hidden',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  };\n};\nvar Icon = /*#__PURE__*/React.forwardRef(function Icon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"fontSize\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx('material-icons', classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && fontSize !== 'medium' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: chainPropTypes(PropTypes.oneOf(['default', 'inherit', 'large', 'medium', 'small']), function (props) {\n    var fontSize = props.fontSize;\n\n    if (fontSize === 'default') {\n      throw new Error('Material-UI: `fontSize=\"default\"` is deprecated. Use `fontSize=\"medium\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nIcon.muiName = 'Icon';\nexport default withStyles(styles, {\n  name: 'MuiIcon'\n})(Icon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepUtilityClass(slot) {\n  return generateUtilityClass('MuiStep', slot);\n}\nconst stepClasses = generateUtilityClasses('MuiStep', ['root', 'horizontal', 'vertical', 'alternativeLabel', 'completed']);\nexport default stepClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"active\", \"children\", \"className\", \"component\", \"completed\", \"disabled\", \"expanded\", \"index\", \"last\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from './StepContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getStepUtilityClass } from './stepClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    alternativeLabel,\n    completed\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, alternativeLabel && 'alternativeLabel', completed && 'completed']\n  };\n  return composeClasses(slots, getStepUtilityClass, classes);\n};\nconst StepRoot = styled('div', {\n  name: 'MuiStep',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.alternativeLabel && styles.alternativeLabel, ownerState.completed && styles.completed];\n  }\n})(({\n  ownerState\n}) => _extends({}, ownerState.orientation === 'horizontal' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}, ownerState.alternativeLabel && {\n  flex: 1,\n  position: 'relative'\n}));\nconst Step = /*#__PURE__*/React.forwardRef(function Step(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStep'\n  });\n  const {\n      active: activeProp,\n      children,\n      className,\n      component = 'div',\n      completed: completedProp,\n      disabled: disabledProp,\n      expanded = false,\n      index,\n      last\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    activeStep,\n    connector,\n    alternativeLabel,\n    orientation,\n    nonLinear\n  } = React.useContext(StepperContext);\n  let [active = false, completed = false, disabled = false] = [activeProp, completedProp, disabledProp];\n  if (activeStep === index) {\n    active = activeProp !== undefined ? activeProp : true;\n  } else if (!nonLinear && activeStep > index) {\n    completed = completedProp !== undefined ? completedProp : true;\n  } else if (!nonLinear && activeStep < index) {\n    disabled = disabledProp !== undefined ? disabledProp : true;\n  }\n  const contextValue = React.useMemo(() => ({\n    index,\n    last,\n    expanded,\n    icon: index + 1,\n    active,\n    completed,\n    disabled\n  }), [index, last, expanded, active, completed, disabled]);\n  const ownerState = _extends({}, props, {\n    active,\n    orientation,\n    alternativeLabel,\n    completed,\n    disabled,\n    expanded,\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  const newChildren = /*#__PURE__*/_jsxs(StepRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [connector && alternativeLabel && index !== 0 ? connector : null, children]\n  }));\n  return /*#__PURE__*/_jsx(StepContext.Provider, {\n    value: contextValue,\n    children: connector && !alternativeLabel && index !== 0 ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [connector, newChildren]\n    }) : newChildren\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the step is disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Expand the step.\n   * @default false\n   */\n  expanded: PropTypes.bool,\n  /**\n   * The position of the step.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  index: integerPropType,\n  /**\n   * If `true`, the Step is displayed as rendered last.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  last: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Step;","import * as React from 'react';\n/**\n * Provides information about the current step in Stepper.\n */\nconst StepContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  StepContext.displayName = 'StepContext';\n}\n\n/**\n * Returns the current StepContext or an empty object if no StepContext\n * has been defined in the component tree.\n */\nexport function useStepContext() {\n  return React.useContext(StepContext);\n}\nexport default StepContext;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z\"\n}), 'CheckCircle');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepIconUtilityClass(slot) {\n  return generateUtilityClass('MuiStepIcon', slot);\n}\nconst stepIconClasses = generateUtilityClasses('MuiStepIcon', ['root', 'active', 'completed', 'error', 'text']);\nexport default stepIconClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _circle;\nconst _excluded = [\"active\", \"className\", \"completed\", \"error\", \"icon\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport CheckCircle from '../internal/svg-icons/CheckCircle';\nimport Warning from '../internal/svg-icons/Warning';\nimport SvgIcon from '../SvgIcon';\nimport stepIconClasses, { getStepIconUtilityClass } from './stepIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    active,\n    completed,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active', completed && 'completed', error && 'error'],\n    text: ['text']\n  };\n  return composeClasses(slots, getStepIconUtilityClass, classes);\n};\nconst StepIconRoot = styled(SvgIcon, {\n  name: 'MuiStepIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  transition: theme.transitions.create('color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  color: (theme.vars || theme).palette.text.disabled,\n  [`&.${stepIconClasses.completed}`]: {\n    color: (theme.vars || theme).palette.primary.main\n  },\n  [`&.${stepIconClasses.active}`]: {\n    color: (theme.vars || theme).palette.primary.main\n  },\n  [`&.${stepIconClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst StepIconText = styled('text', {\n  name: 'MuiStepIcon',\n  slot: 'Text',\n  overridesResolver: (props, styles) => styles.text\n})(({\n  theme\n}) => ({\n  fill: (theme.vars || theme).palette.primary.contrastText,\n  fontSize: theme.typography.caption.fontSize,\n  fontFamily: theme.typography.fontFamily\n}));\nconst StepIcon = /*#__PURE__*/React.forwardRef(function StepIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepIcon'\n  });\n  const {\n      active = false,\n      className: classNameProp,\n      completed = false,\n      error = false,\n      icon\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    active,\n    completed,\n    error\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (typeof icon === 'number' || typeof icon === 'string') {\n    const className = clsx(classNameProp, classes.root);\n    if (error) {\n      return /*#__PURE__*/_jsx(StepIconRoot, _extends({\n        as: Warning,\n        className: className,\n        ref: ref,\n        ownerState: ownerState\n      }, other));\n    }\n    if (completed) {\n      return /*#__PURE__*/_jsx(StepIconRoot, _extends({\n        as: CheckCircle,\n        className: className,\n        ref: ref,\n        ownerState: ownerState\n      }, other));\n    }\n    return /*#__PURE__*/_jsxs(StepIconRoot, _extends({\n      className: className,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      children: [_circle || (_circle = /*#__PURE__*/_jsx(\"circle\", {\n        cx: \"12\",\n        cy: \"12\",\n        r: \"12\"\n      })), /*#__PURE__*/_jsx(StepIconText, {\n        className: classes.text,\n        x: \"12\",\n        y: \"12\",\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        ownerState: ownerState,\n        children: icon\n      })]\n    }));\n  }\n  return icon;\n});\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Whether this step is active.\n   * @default false\n   */\n  active: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   * @default false\n   */\n  completed: PropTypes.bool,\n  /**\n   * If `true`, the step is marked as failed.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default StepIcon;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiStepLabel', slot);\n}\nconst stepLabelClasses = generateUtilityClasses('MuiStepLabel', ['root', 'horizontal', 'vertical', 'label', 'active', 'completed', 'error', 'disabled', 'iconContainer', 'alternativeLabel', 'labelContainer']);\nexport default stepLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"componentsProps\", \"error\", \"icon\", \"optional\", \"slotProps\", \"StepIconComponent\", \"StepIconProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport StepIcon from '../StepIcon';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from '../Step/StepContext';\nimport stepLabelClasses, { getStepLabelUtilityClass } from './stepLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    active,\n    completed,\n    error,\n    disabled,\n    alternativeLabel\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, error && 'error', disabled && 'disabled', alternativeLabel && 'alternativeLabel'],\n    label: ['label', active && 'active', completed && 'completed', error && 'error', disabled && 'disabled', alternativeLabel && 'alternativeLabel'],\n    iconContainer: ['iconContainer', active && 'active', completed && 'completed', error && 'error', disabled && 'disabled', alternativeLabel && 'alternativeLabel'],\n    labelContainer: ['labelContainer', alternativeLabel && 'alternativeLabel']\n  };\n  return composeClasses(slots, getStepLabelUtilityClass, classes);\n};\nconst StepLabelRoot = styled('span', {\n  name: 'MuiStepLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  [`&.${stepLabelClasses.alternativeLabel}`]: {\n    flexDirection: 'column'\n  },\n  [`&.${stepLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.orientation === 'vertical' && {\n  textAlign: 'left',\n  padding: '8px 0'\n}));\nconst StepLabelLabel = styled('span', {\n  name: 'MuiStepLabel',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  display: 'block',\n  transition: theme.transitions.create('color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${stepLabelClasses.active}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    fontWeight: 500\n  },\n  [`&.${stepLabelClasses.completed}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    fontWeight: 500\n  },\n  [`&.${stepLabelClasses.alternativeLabel}`]: {\n    marginTop: 16\n  },\n  [`&.${stepLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst StepLabelIconContainer = styled('span', {\n  name: 'MuiStepLabel',\n  slot: 'IconContainer',\n  overridesResolver: (props, styles) => styles.iconContainer\n})(() => ({\n  flexShrink: 0,\n  // Fix IE11 issue\n  display: 'flex',\n  paddingRight: 8,\n  [`&.${stepLabelClasses.alternativeLabel}`]: {\n    paddingRight: 0\n  }\n}));\nconst StepLabelLabelContainer = styled('span', {\n  name: 'MuiStepLabel',\n  slot: 'LabelContainer',\n  overridesResolver: (props, styles) => styles.labelContainer\n})(({\n  theme\n}) => ({\n  width: '100%',\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${stepLabelClasses.alternativeLabel}`]: {\n    textAlign: 'center'\n  }\n}));\nconst StepLabel = /*#__PURE__*/React.forwardRef(function StepLabel(inProps, ref) {\n  var _slotProps$label;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepLabel'\n  });\n  const {\n      children,\n      className,\n      componentsProps = {},\n      error = false,\n      icon: iconProp,\n      optional,\n      slotProps = {},\n      StepIconComponent: StepIconComponentProp,\n      StepIconProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    alternativeLabel,\n    orientation\n  } = React.useContext(StepperContext);\n  const {\n    active,\n    disabled,\n    completed,\n    icon: iconContext\n  } = React.useContext(StepContext);\n  const icon = iconProp || iconContext;\n  let StepIconComponent = StepIconComponentProp;\n  if (icon && !StepIconComponent) {\n    StepIconComponent = StepIcon;\n  }\n  const ownerState = _extends({}, props, {\n    active,\n    alternativeLabel,\n    completed,\n    disabled,\n    error,\n    orientation\n  });\n  const classes = useUtilityClasses(ownerState);\n  const labelSlotProps = (_slotProps$label = slotProps.label) != null ? _slotProps$label : componentsProps.label;\n  return /*#__PURE__*/_jsxs(StepLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [icon || StepIconComponent ? /*#__PURE__*/_jsx(StepLabelIconContainer, {\n      className: classes.iconContainer,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(StepIconComponent, _extends({\n        completed: completed,\n        active: active,\n        error: error,\n        icon: icon\n      }, StepIconProps))\n    }) : null, /*#__PURE__*/_jsxs(StepLabelLabelContainer, {\n      className: classes.labelContainer,\n      ownerState: ownerState,\n      children: [children ? /*#__PURE__*/_jsx(StepLabelLabel, _extends({\n        ownerState: ownerState\n      }, labelSlotProps, {\n        className: clsx(classes.label, labelSlotProps == null ? void 0 : labelSlotProps.className),\n        children: children\n      })) : null, optional]\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * In most cases will simply be a string containing a title for the label.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    label: PropTypes.object\n  }),\n  /**\n   * If `true`, the step is marked as failed.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Override the default label of the step icon.\n   */\n  icon: PropTypes.node,\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    label: PropTypes.object\n  }),\n  /**\n   * The component to render in place of the [`StepIcon`](/material-ui/api/step-icon/).\n   */\n  StepIconComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`StepIcon`](/material-ui/api/step-icon/) element.\n   */\n  StepIconProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nStepLabel.muiName = 'StepLabel';\nexport default StepLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepperUtilityClass(slot) {\n  return generateUtilityClass('MuiStepper', slot);\n}\nconst stepperClasses = generateUtilityClasses('MuiStepper', ['root', 'horizontal', 'vertical', 'alternativeLabel']);\nexport default stepperClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepConnectorUtilityClass(slot) {\n  return generateUtilityClass('MuiStepConnector', slot);\n}\nconst stepConnectorClasses = generateUtilityClasses('MuiStepConnector', ['root', 'horizontal', 'vertical', 'alternativeLabel', 'active', 'completed', 'disabled', 'line', 'lineHorizontal', 'lineVertical']);\nexport default stepConnectorClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from '../Step/StepContext';\nimport { getStepConnectorUtilityClass } from './stepConnectorClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    alternativeLabel,\n    active,\n    completed,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, alternativeLabel && 'alternativeLabel', active && 'active', completed && 'completed', disabled && 'disabled'],\n    line: ['line', `line${capitalize(orientation)}`]\n  };\n  return composeClasses(slots, getStepConnectorUtilityClass, classes);\n};\nconst StepConnectorRoot = styled('div', {\n  name: 'MuiStepConnector',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.alternativeLabel && styles.alternativeLabel, ownerState.completed && styles.completed];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto'\n}, ownerState.orientation === 'vertical' && {\n  marginLeft: 12 // half icon\n}, ownerState.alternativeLabel && {\n  position: 'absolute',\n  top: 8 + 4,\n  left: 'calc(-50% + 20px)',\n  right: 'calc(50% + 20px)'\n}));\nconst StepConnectorLine = styled('span', {\n  name: 'MuiStepConnector',\n  slot: 'Line',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.line, styles[`line${capitalize(ownerState.orientation)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600];\n  return _extends({\n    display: 'block',\n    borderColor: theme.vars ? theme.vars.palette.StepConnector.border : borderColor\n  }, ownerState.orientation === 'horizontal' && {\n    borderTopStyle: 'solid',\n    borderTopWidth: 1\n  }, ownerState.orientation === 'vertical' && {\n    borderLeftStyle: 'solid',\n    borderLeftWidth: 1,\n    minHeight: 24\n  });\n});\nconst StepConnector = /*#__PURE__*/React.forwardRef(function StepConnector(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepConnector'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    alternativeLabel,\n    orientation = 'horizontal'\n  } = React.useContext(StepperContext);\n  const {\n    active,\n    disabled,\n    completed\n  } = React.useContext(StepContext);\n  const ownerState = _extends({}, props, {\n    alternativeLabel,\n    orientation,\n    active,\n    completed,\n    disabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(StepConnectorRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(StepConnectorLine, {\n      className: classes.line,\n      ownerState: ownerState\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepConnector.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default StepConnector;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"activeStep\", \"alternativeLabel\", \"children\", \"className\", \"component\", \"connector\", \"nonLinear\", \"orientation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getStepperUtilityClass } from './stepperClasses';\nimport StepConnector from '../StepConnector';\nimport StepperContext from './StepperContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation,\n    alternativeLabel,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, alternativeLabel && 'alternativeLabel']\n  };\n  return composeClasses(slots, getStepperUtilityClass, classes);\n};\nconst StepperRoot = styled('div', {\n  name: 'MuiStepper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.alternativeLabel && styles.alternativeLabel];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex'\n}, ownerState.orientation === 'horizontal' && {\n  flexDirection: 'row',\n  alignItems: 'center'\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.alternativeLabel && {\n  alignItems: 'flex-start'\n}));\nconst defaultConnector = /*#__PURE__*/_jsx(StepConnector, {});\nconst Stepper = /*#__PURE__*/React.forwardRef(function Stepper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepper'\n  });\n  const {\n      activeStep = 0,\n      alternativeLabel = false,\n      children,\n      className,\n      component = 'div',\n      connector = defaultConnector,\n      nonLinear = false,\n      orientation = 'horizontal'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    alternativeLabel,\n    orientation,\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  const steps = childrenArray.map((step, index) => {\n    return /*#__PURE__*/React.cloneElement(step, _extends({\n      index,\n      last: index + 1 === childrenArray.length\n    }, step.props));\n  });\n  const contextValue = React.useMemo(() => ({\n    activeStep,\n    alternativeLabel,\n    connector,\n    nonLinear,\n    orientation\n  }), [activeStep, alternativeLabel, connector, nonLinear, orientation]);\n  return /*#__PURE__*/_jsx(StepperContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(StepperRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: steps\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the active step (zero based index).\n   * Set to -1 to disable all the steps.\n   * @default 0\n   */\n  activeStep: integerPropType,\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   * @default false\n   */\n  alternativeLabel: PropTypes.bool,\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * An element to be placed between each step.\n   * @default <StepConnector />\n   */\n  connector: PropTypes.element,\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   * @default false\n   */\n  nonLinear: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stepper;","import * as React from 'react';\n/**\n * Provides information about the current step in Stepper.\n */\nconst StepperContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  StepperContext.displayName = 'StepperContext';\n}\n\n/**\n * Returns the current StepperContext or an empty object if no StepperContext\n * has been defined in the component tree.\n */\nexport function useStepperContext() {\n  return React.useContext(StepperContext);\n}\nexport default StepperContext;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n */\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const includeImageAlt = (options || {}).includeImageAlt\n  return one(\n    value,\n    typeof includeImageAlt === 'boolean' ? includeImageAlt : true\n  )\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt) {\n  return (\n    (node(value) &&\n      (('value' in value && value.value) ||\n        (includeImageAlt && 'alt' in value && value.alt) ||\n        ('children' in value && all(value.children, includeImageAlt)))) ||\n    (Array.isArray(value) && all(value, includeImageAlt)) ||\n    ''\n  )\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["Accordion","React","props","ref","childrenProp","children","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","expandedProp","expanded","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","name","state","_useControlled2","_slicedToArray","setExpandedState","handleChange","event","_React$Children$toArr","_React$Children$toArr2","_toArray","summary","slice","contextValue","toggle","Paper","_extends","clsx","root","rounded","AccordionContext","value","in","timeout","id","role","withStyles","theme","transition","duration","transitions","shortest","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","AccordionDetails","padding","spacing","IconButton","_props$edge","edge","_props$color","color","_props$disableFocusRi","disableFocusRipple","_props$size","size","ButtonBase","concat","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","label","textAlign","flex","fontSize","typography","pxToRem","overflow","active","alpha","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","width","alignItems","justifyContent","AccordionSummary","expandIcon","focusVisibleClassName","_props$IconButtonProp","IconButtonProps","onClick","_React$useContext","_React$useContext$dis","disableRipple","component","focusVisible","focused","tabIndex","minHeight","cursor","focus","disabledOpacity","flexGrow","transform","Card","_props$raised","raised","elevation","CardActionArea","focusHighlight","pointerEvents","bottom","short","CardActions","_props$disableSpacing","disableSpacing","CardContent","_props$component","Component","paddingBottom","MEDIA_COMPONENTS","CardMedia","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","collapsedHeight","_props$collapsedSize","collapsedSize","collapsedSizeProp","_props$disableStrictM","disableStrictModeCompat","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$timeout","Transition","useTheme","timer","wrapperRef","autoTransitionDuration","clearTimeout","current","enableStrictModeCompat","unstable_strictMode","nodeRef","handleRef","useForkRef","normalizedTransitionCallback","callback","nodeOrAppearing","maybeAppearing","_ref","_ref2","node","isAppearing","handleEnter","handleEntering","wrapperHeight","clientHeight","transitionDuration","getTransitionProps","mode","duration2","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","addEndListener","nodeOrNext","maybeNext","next","setTimeout","childProps","container","entered","hidden","wrapper","wrapperInner","muiSupportAuto","visibility","Icon","_props$fontSize","muiName","userSelect","flexShrink","colorAction","colorError","error","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","useEnhancedEffect","window","ListItem","_props$alignItems","_props$autoFocus","autoFocus","_props$button","button","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$dense","dense","_props$disableGutters","disableGutters","_props$divider","_props$selected","selected","context","ListContext","childContext","listItemRef","element","muiNames","hasSecondaryAction","length","type","handleOwnRef","instance","ReactDOM","componentProps","gutters","alignItemsFlexStart","secondaryAction","pop","textDecoration","boxSizing","paddingTop","borderBottom","backgroundClip","paddingLeft","paddingRight","hover","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","Typography","variant","multiline","minWidth","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","getStepUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","StepRoot","styled","overridesResolver","styles","ownerState","orientation","alternativeLabel","completed","inProps","useThemeProps","activeProp","completedProp","disabledProp","_props$expanded","index","last","_objectWithoutPropertiesLoose","StepperContext","activeStep","connector","nonLinear","icon","slots","composeClasses","useUtilityClasses","newChildren","_jsxs","as","_jsx","StepContext","createSvgIcon","getStepIconUtilityClass","_circle","StepIconRoot","SvgIcon","vars","text","_defineProperty","stepIconClasses","StepIconText","_ref3","fill","contrastText","caption","fontFamily","_props$active","classNameProp","_props$completed","_props$error","Warning","CheckCircle","cx","cy","r","x","y","textAnchor","dominantBaseline","getStepLabelUtilityClass","StepLabelRoot","_extends2","stepLabelClasses","flexDirection","StepLabelLabel","_extends3","body2","fontWeight","StepLabelIconContainer","iconContainer","StepLabelLabelContainer","labelContainer","_ref4","StepLabel","_slotProps$label","_props$componentsProp","componentsProps","iconProp","optional","_props$slotProps","slotProps","StepIconComponentProp","StepIconComponent","StepIconProps","_React$useContext2","iconContext","StepIcon","labelSlotProps","getStepperUtilityClass","getStepConnectorUtilityClass","StepConnectorRoot","StepConnectorLine","line","borderColor","grey","StepConnector","border","borderTopStyle","borderTopWidth","borderLeftStyle","borderLeftWidth","_React$useContext$ori","StepperRoot","defaultConnector","_props$activeStep","_props$alternativeLab","_props$connector","_props$nonLinear","_props$orientation","childrenArray","filter","Boolean","steps","map","step","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","module","extend","copy","copyIsArray","clone","arguments","i","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","start","Position","whitespace","this","end","source","errorsList","msg","err","Error","reason","filename","silent","push","re","m","exec","comments","rules","c","comment","pos","charAt","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","u","b","Symbol","for","e","f","g","h","k","l","n","p","q","t","v","a","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","StyleToObject","iterator","output","hasIterator","len","stringifyPosition","point","VFileMessage","_Error","_inherits","_super","_createSuper","place","origin","_this","_classCallCheck","parts","message","stack","fatal","ruleId","file","actual","expected","url","note","_createClass","_wrapNativeSuper","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","_len","segments","_key","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","bufferLike","buffer","data","messages","history","stored","_toConsumableArray","includes","get","set","assertNonEmpty","assertPart","stem","encoding","part","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","run","values","middlewareIndex","fn","_len2","_key2","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","done","apply","Promise","then","_len4","_key4","wrap","use","middelware","unified","base","frozen","transformers","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","_attachers$freezeInde","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","_value","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","looksLikeAVFile","one","includeImageAlt","alt","all","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","extension","hook","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","_document","_flowInitial","_flow","_string","_text","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","_combined$key","_combined$key2","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","_checks$index","CONTINUE","visitParents","visitor","reverse","is","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","trimLine","codePointAt","handlers","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","child","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","_objectSpread","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","pow","types","DefinedInfo","_Info","mask","mark","_assertThisInitialized","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","sizes","span","spellCheck","srcDoc","srcLang","srcSet","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontSizeAdjust","fontStretch","fontStyle","fontVariant","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","editable","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","operator","orient","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","thing","valid","dash","cap","kebab","camelcase","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","components","basic","ReactIs","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","_unused","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes"],"sourceRoot":""}