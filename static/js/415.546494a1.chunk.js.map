{"version":3,"file":"static/js/415.546494a1.chunk.js","mappings":"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","sources":["components/Tags.js","components/Objectives.js","components/Timeline.js","components/DateRange.js","components/MediaCard.js","components/YouTubeEmbed.js","sections/Doxim.js","pages/Employment.js"],"sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Icon from '@material-ui/core/Icon';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.1),\r\n    },\r\n  },\r\n}));\r\n// https://mui.com/components/material-icons/\r\nexport default function Tags(props) {\r\n  const classes = useStyles();\r\n  const tagId = props.children?.replace(' ', '_')\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip\r\n        tag={tagId}\r\n        color=\"primary\"\r\n        icon={<Icon className=\"material-icons-outlined\">tag</Icon>}\r\n        label={props.children} />\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n/* import InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts'; */\r\nimport FolderSpecialIcon from '@material-ui/icons/FolderSpecial';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { Typography } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: \"10px\",\r\n        borderRadius: \"5px\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n    return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nexport default function SimpleList(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List component=\"nav\" key={props.list} aria-label=\"secondary\">\r\n                {/* <Typography variant='h4'>\r\n                    <Typography variant='subtitle'>\r\n                        &nbsp;Objectives\r\n                    </Typography>\r\n                </Typography> */}\r\n                {props.list.split(\"|\").map(objective => {\r\n                    return (<div><ListItem key={objective} divider>\r\n                        <ListItemText primary={objective} />\r\n                    </ListItem></div>)\r\n                })}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n","import Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Box from '@mui/material/Box';\r\nimport { useState } from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport { indigo, } from '@material-ui/core/colors/';\r\nimport { Grid } from '@material-ui/core';\r\n// https://mui.com/components/steppers/\r\n\r\n// MAKE SURE \"props.steps\" IS A MATRIX OF STRINGS (n*2) where n > 1\r\nexport default function Timeline(props) {\r\n    const [activeStep, setActiveStep] = useState(0); // all steps will be active\r\n    return (<div style={{ \"color\": \"whitesmoke\" }}>\r\n        <Box sx={{ width: '100%' }}>\r\n            {/* <Grid direction=\"\" alignItems=\"baseline\" container xs> */}\r\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                {props.steps.map((key, index) => {\r\n                    let [date, event] = key;\r\n                    return (\r\n                        <Step active={true} key={index}>\r\n                            <StepLabel optional={<Typography style={{ \"color\": \"gray\" }} variant=\"caption\">{date}</Typography>}>\r\n                                <Typography style={{ \"color\": \"whitesmoke\" }} variant=\"body2\">{event}</Typography>\r\n                            </StepLabel>\r\n                        </Step>\r\n                    )\r\n                })}\r\n            </Stepper>\r\n            {/* </Grid> */}\r\n        </Box>\r\n    </div>)\r\n}","import { Typography, } from \"@material-ui/core\";\r\n\r\n\r\nexport default function DateRange(props) {\r\n    const initialYear = props.timeline[0][0].match(\"[0-9]{4}\")[0]\r\n    const finalYear = props.timeline[props.timeline.length - 1][0].match(\"[0-9]{4}\")[0]\r\n    const w = props.complete ? finalYear : \"Now\" // TODO: reword \"Present\" ?\r\n    const out = initialYear === finalYear ? initialYear /* + \" - \" + initialYear  */: initialYear + \" - \" + w\r\n    return (\r\n        <Typography\r\n            variant=\"subtitle1\"\r\n            style={{ color: \"gray\", textAlign: \"right\", marginTop: \"-5px\" }}\r\n            component=\"div\">\r\n            {out}\r\n        </Typography>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Divider, Zoom, Grow } from '@material-ui/core';\r\nimport ReactGA from \"react-ga\"\r\n\r\nimport Tags from \"./Tags\"\r\nimport Objectives from \"./Objectives\"\r\nimport Section from './Section';\r\nimport Timeline from './Timeline';\r\nimport DateRange from './DateRange';\r\nimport ReactMarkdown from 'react-markdown';\r\n// import MainDialog from './MainDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        height: 140,\r\n    },\r\n    cardcontent: {\r\n        \"&:last-child\": {\r\n            paddingBottom: 0\r\n        }\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    tags: {\r\n        overflow: \"visible\",\r\n        float: \"right\",\r\n        maxHeight: \"34px\",\r\n        minWidth: \"90%\"\r\n    }\r\n}));\r\n\r\nexport default function MediaCard(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [cardSize, setCardSize] = React.useState(props.size || 6);\r\n    const cardRef = React.useRef(null)\r\n    //let cardWidth = 6\r\n    const executeScroll = () => cardRef.current.scrollIntoView()\r\n    const handleExpandClick = () => {\r\n        //setCardSize(6) // TODO: make cards expand to full width for desktop-sized screens\r\n        setCardSize(expanded ? (props.size || 6) : 12) // TODO: make cards expand to full width for desktop-sized screens\r\n\r\n        if (!expanded) {\r\n            executeScroll() // scroll to focused card\r\n        }\r\n        setExpanded(!expanded);\r\n    };\r\n    const gaCardExpandHandle = (cardName = \"none\") => {\r\n        ReactGA.event({category: \"z_ui-card-expand\", label: cardName, action: cardName}) // TODO: see if this works on prod\r\n    }\r\n    return (\r\n        /* <Grid item xs={12} sm> */ // FOR ONLY ROWS\r\n        <Grow in timeout={700}>\r\n            {/* selection border logic below */}\r\n            <Grid item xs={12} md={cardSize || props.size} lg={cardSize || props.size}>\r\n                <Card ref={cardRef} style={expanded ? { border: \"2px solid  #3f51b5\" } : { border: null }} elevation={3}>\r\n                    <CardActionArea onClick={() => { handleExpandClick(); gaCardExpandHandle(props.title)}}>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={props.banner}\r\n                            title={props.title}\r\n                        />\r\n                        <CardContent className={classes.cardcontent}>\r\n                            <Grid justifyContent='space-between' container>\r\n                                <Grid item xs={10}>\r\n                                    <Typography gutterBottom variant=\"h3\" style={{ fontFamily: \"Bebas Neue\" }} component=\"h2\">\r\n                                        {props.title}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item sm>\r\n                                    <DateRange {...props} />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" >\r\n                                    <ReactMarkdown>{props.description}</ReactMarkdown>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                        <Divider style={{ marginRight: \"18px\", marginLeft: \"18px\" }} />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {props.prechildren}\r\n                                {props.objectives && <Section icon={\"fa-solid fa-list\"} title=\"Deliverables\">\r\n                                    <Objectives list={props.objectives} />\r\n                                </Section>}\r\n                                {props.timeline && <Section icon={\"fa-solid fa-timeline\"} title=\"Timeline\">\r\n                                    <Timeline steps={props.timeline} />\r\n                                </Section>}\r\n                                {props.children}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Collapse>\r\n                    <CardActions>\r\n                        {typeof (props.tags) == \"string\" && <Grid style={{ overflowY: \"scroll\", maxHeight: \"20vh\" }} alignItems=\"baseline\" container spacing={1}>\r\n                            {props.tags.split(\",\").map(tag => { return <Grid item><Tags>{tag}</Tags></Grid> })}\r\n                        </Grid>}\r\n                    </CardActions>\r\n                    <Button onClick={() => { handleExpandClick(); gaCardExpandHandle(props.title)}} style={{ paddingBottom: 20, paddingTop: 20 }} size=\"small\" color=\"primary\">\r\n                        {expanded ? \"Less\" : \"More\"}\r\n                    </Button>\r\n                </Card>\r\n            </Grid>\r\n        </Grow>\r\n    );\r\n}","export default function Embed(props) {\r\n    return (<div className=\"video-responsive\">\r\n        <iframe width=\"480\" height=\"270\"\r\n            src={`https://www.youtube-nocookie.com/embed/${props.id}`}\r\n            title={props.id} frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen>\r\n        </iframe>\r\n    </div>)\r\n}","export default {\r\n    meta: {\r\n        title: \"Doxim\",\r\n        description: `__Implementation Programming Intern__ at Doxim. Doxim is the customer communications management and engagement technology leader serving highly regulated markets, including financial services, utilities and healthcare. We provide omnichannel document and payment solutions that transform experiences and strengthen engagement throughout the entire lifecycle [www.doxim.com](https://www.doxim.com).`,\r\n        banner: \"/pics/doxim.png\",\r\n        complete: false,\r\n        tags: \"C#,PowerShell,MySQL,Agile,Scripting,Production Support,Internship,Pair Programming\",\r\n        objectives: `Parsed and extracted data from text files using C# and PowerShell to create billing statements.\r\n        |Managed credit union workflows to ensure organized and optimized month-end billing deliveries.\r\n        |Designed proof-of-concept for virtual machine manager full-stack web project.\r\n        |Created automation scripts for the composition, storage, and archival of business-critical documents. `, // Objectives are seperated by PIPE '|'\r\n        timeline: [\r\n            [\"May 2nd, 2022\", \"Internship begins.\"]\r\n        ],\r\n    }, components: { links, statistics }\r\n}\r\n\r\nfunction links() {\r\n    return (<div>\r\n        ...\r\n    </div>)\r\n}\r\n\r\nfunction statistics() {\r\n    return (<div>\r\n        ...\r\n    </div>)\r\n}\r\n","import { Grid } from \"@material-ui/core\"\r\nimport { Grow, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport MediaCard from \"../components/MediaCard\"\r\nimport Section from \"../components/Section\"\r\nimport YouTubeEmbed from \"../components/YouTubeEmbed\"\r\nimport Doxim from \"../sections/Doxim\"\r\n\r\nexport default function Employment() {\r\n    return <Grow in timeout={500}>\r\n        <Grid\r\n            justifyContent=\"flex-start\"\r\n            style={{ marginTop: \"10px\" }}\r\n            container spacing={2}>\r\n            <MediaCard {...Doxim.meta} size={12}>\r\n                <Section icon=\"fa-solid fa-circle-info\" title=\"More Info\">\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <YouTubeEmbed id=\"eU-eX6Akb2w\" />\r\n                        </Grid>\r\n                        <Grid item sm>\r\n                            <i>Taken from www.doxim.com: </i><br/>\r\n                            <Typography variant=\"caption\">\r\n                            The Doxim Platform helps clients communicate reliably and effectively, improves cross-sell and upsell opportunities, and drives increased loyalty and wallet share through personalized communications and easy-to-use payment processes. The platform addresses key digitization, operational efficiency, and customer experience challenges through our suite of plug-and-play, integrated, SaaS software and technology solutions. Learn more at <a href=\"https://www.doxim.com/\">www.doxim.com</a>.\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Section>\r\n                <Section icon=\"fa-solid fa-star\" title=\"Welcoming\">\r\n                <iframe src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:6941068042143510528\" height=\"1000px\" width=\"100%\" frameBorder=\"0\" allowFullscreen=\"\" title=\"Embedded post\"></iframe>\r\n                </Section>\r\n            </MediaCard>\r\n        </Grid>\r\n    </Grow>\r\n}"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","Tags","props","classes","tagId","children","replace","className","Chip","tag","color","icon","Icon","label","width","padding","borderRadius","backgroundColor","palette","background","default","SimpleList","List","component","list","split","map","objective","divider","ListItemText","primary","Timeline","useState","activeStep","style","Box","sx","Stepper","orientation","steps","key","index","date","event","Step","active","StepLabel","optional","variant","DateRange","initialYear","timeline","match","finalYear","length","w","complete","out","Typography","textAlign","marginTop","media","height","cardcontent","paddingBottom","paper","tags","overflow","float","maxHeight","minWidth","MediaCard","React","expanded","setExpanded","size","cardSize","setCardSize","cardRef","handleExpandClick","current","scrollIntoView","gaCardExpandHandle","cardName","ReactGA","category","action","Grow","in","timeout","Grid","item","xs","md","lg","Card","ref","border","elevation","CardActionArea","onClick","title","CardMedia","image","banner","CardContent","container","gutterBottom","fontFamily","sm","description","Collapse","unmountOnExit","Divider","marginRight","marginLeft","prechildren","objectives","Section","CardActions","overflowY","alignItems","Button","paddingTop","Embed","src","id","frameBorder","allow","allowFullScreen","Employment","Doxim","YouTubeEmbed","href","allowFullscreen"],"sourceRoot":""}