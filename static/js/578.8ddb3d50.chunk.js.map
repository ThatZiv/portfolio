{"version":3,"file":"static/js/578.8ddb3d50.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/utils/isMuiElement.js","../node_modules/@mui/material/Grow/Grow.js","../node_modules/@mui/material/internal/svg-icons/CheckCircle.js","../node_modules/@mui/material/internal/svg-icons/Warning.js","../node_modules/@mui/material/StepIcon/stepIconClasses.js","../node_modules/@mui/material/StepIcon/StepIcon.js","../node_modules/@mui/material/StepLabel/stepLabelClasses.js","../node_modules/@mui/material/StepLabel/StepLabel.js","../node_modules/@mui/material/Step/stepClasses.js","../node_modules/@mui/material/Step/Step.js","../node_modules/@mui/material/Step/StepContext.js","../node_modules/@mui/material/Stepper/stepperClasses.js","../node_modules/@mui/material/StepConnector/stepConnectorClasses.js","../node_modules/@mui/material/StepConnector/StepConnector.js","../node_modules/@mui/material/Stepper/Stepper.js","../node_modules/@mui/material/Stepper/StepperContext.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef } from '@mui/utils';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps, reflow } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getScale(value) {\n  return `scale(${value}, ${value ** 2})`;\n}\nconst styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n\n/*\n TODO v6: remove\n Conditionally apply a workaround for the CSS transition bug in Safari 15.4 / WebKit browsers.\n */\nconst isWebKit154 = typeof navigator !== 'undefined' && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\\/)15(.|_)4/i.test(navigator.userAgent);\n\n/**\n * The Grow transition is used by the [Tooltip](/material-ui/react-tooltip/) and\n * [Popover](/material-ui/react-popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  const {\n      addEndListener,\n      appear = true,\n      children,\n      easing,\n      in: inProp,\n      onEnter,\n      onEntered,\n      onEntering,\n      onExit,\n      onExited,\n      onExiting,\n      style,\n      timeout = 'auto',\n      // eslint-disable-next-line react/prop-types\n      TransitionComponent = Transition\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const timer = React.useRef();\n  const autoTimeout = React.useRef();\n  const theme = useTheme();\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(nodeRef, children.ref, ref);\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current;\n\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const {\n      duration: transitionDuration,\n      delay,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    let duration;\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: isWebKit154 ? duration : duration * 0.666,\n      delay,\n      easing: transitionTimingFunction\n    })].join(',');\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const {\n      duration: transitionDuration,\n      delay,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    let duration;\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: isWebKit154 ? duration : duration * 0.666,\n      delay: isWebKit154 ? delay : delay || duration * 0.333,\n      easing: transitionTimingFunction\n    })].join(',');\n    node.style.opacity = 0;\n    node.style.transform = getScale(0.75);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleAddEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        style: _extends({\n          opacity: 0,\n          transform: getScale(0.75),\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default 'auto'\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z\"\n}), 'CheckCircle');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepIconUtilityClass(slot) {\n  return generateUtilityClass('MuiStepIcon', slot);\n}\nconst stepIconClasses = generateUtilityClasses('MuiStepIcon', ['root', 'active', 'completed', 'error', 'text']);\nexport default stepIconClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _circle;\nconst _excluded = [\"active\", \"className\", \"completed\", \"error\", \"icon\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport CheckCircle from '../internal/svg-icons/CheckCircle';\nimport Warning from '../internal/svg-icons/Warning';\nimport SvgIcon from '../SvgIcon';\nimport stepIconClasses, { getStepIconUtilityClass } from './stepIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    active,\n    completed,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active', completed && 'completed', error && 'error'],\n    text: ['text']\n  };\n  return composeClasses(slots, getStepIconUtilityClass, classes);\n};\nconst StepIconRoot = styled(SvgIcon, {\n  name: 'MuiStepIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  transition: theme.transitions.create('color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  color: (theme.vars || theme).palette.text.disabled,\n  [`&.${stepIconClasses.completed}`]: {\n    color: (theme.vars || theme).palette.primary.main\n  },\n  [`&.${stepIconClasses.active}`]: {\n    color: (theme.vars || theme).palette.primary.main\n  },\n  [`&.${stepIconClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst StepIconText = styled('text', {\n  name: 'MuiStepIcon',\n  slot: 'Text',\n  overridesResolver: (props, styles) => styles.text\n})(({\n  theme\n}) => ({\n  fill: (theme.vars || theme).palette.primary.contrastText,\n  fontSize: theme.typography.caption.fontSize,\n  fontFamily: theme.typography.fontFamily\n}));\nconst StepIcon = /*#__PURE__*/React.forwardRef(function StepIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepIcon'\n  });\n  const {\n      active = false,\n      className: classNameProp,\n      completed = false,\n      error = false,\n      icon\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    active,\n    completed,\n    error\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (typeof icon === 'number' || typeof icon === 'string') {\n    const className = clsx(classNameProp, classes.root);\n    if (error) {\n      return /*#__PURE__*/_jsx(StepIconRoot, _extends({\n        as: Warning,\n        className: className,\n        ref: ref,\n        ownerState: ownerState\n      }, other));\n    }\n    if (completed) {\n      return /*#__PURE__*/_jsx(StepIconRoot, _extends({\n        as: CheckCircle,\n        className: className,\n        ref: ref,\n        ownerState: ownerState\n      }, other));\n    }\n    return /*#__PURE__*/_jsxs(StepIconRoot, _extends({\n      className: className,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      children: [_circle || (_circle = /*#__PURE__*/_jsx(\"circle\", {\n        cx: \"12\",\n        cy: \"12\",\n        r: \"12\"\n      })), /*#__PURE__*/_jsx(StepIconText, {\n        className: classes.text,\n        x: \"12\",\n        y: \"12\",\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        ownerState: ownerState,\n        children: icon\n      })]\n    }));\n  }\n  return icon;\n});\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Whether this step is active.\n   * @default false\n   */\n  active: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   * @default false\n   */\n  completed: PropTypes.bool,\n  /**\n   * If `true`, the step is marked as failed.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default StepIcon;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiStepLabel', slot);\n}\nconst stepLabelClasses = generateUtilityClasses('MuiStepLabel', ['root', 'horizontal', 'vertical', 'label', 'active', 'completed', 'error', 'disabled', 'iconContainer', 'alternativeLabel', 'labelContainer']);\nexport default stepLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"componentsProps\", \"error\", \"icon\", \"optional\", \"slotProps\", \"StepIconComponent\", \"StepIconProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport StepIcon from '../StepIcon';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from '../Step/StepContext';\nimport stepLabelClasses, { getStepLabelUtilityClass } from './stepLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    active,\n    completed,\n    error,\n    disabled,\n    alternativeLabel\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, error && 'error', disabled && 'disabled', alternativeLabel && 'alternativeLabel'],\n    label: ['label', active && 'active', completed && 'completed', error && 'error', disabled && 'disabled', alternativeLabel && 'alternativeLabel'],\n    iconContainer: ['iconContainer', active && 'active', completed && 'completed', error && 'error', disabled && 'disabled', alternativeLabel && 'alternativeLabel'],\n    labelContainer: ['labelContainer', alternativeLabel && 'alternativeLabel']\n  };\n  return composeClasses(slots, getStepLabelUtilityClass, classes);\n};\nconst StepLabelRoot = styled('span', {\n  name: 'MuiStepLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  [`&.${stepLabelClasses.alternativeLabel}`]: {\n    flexDirection: 'column'\n  },\n  [`&.${stepLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.orientation === 'vertical' && {\n  textAlign: 'left',\n  padding: '8px 0'\n}));\nconst StepLabelLabel = styled('span', {\n  name: 'MuiStepLabel',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  display: 'block',\n  transition: theme.transitions.create('color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${stepLabelClasses.active}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    fontWeight: 500\n  },\n  [`&.${stepLabelClasses.completed}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    fontWeight: 500\n  },\n  [`&.${stepLabelClasses.alternativeLabel}`]: {\n    marginTop: 16\n  },\n  [`&.${stepLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst StepLabelIconContainer = styled('span', {\n  name: 'MuiStepLabel',\n  slot: 'IconContainer',\n  overridesResolver: (props, styles) => styles.iconContainer\n})(() => ({\n  flexShrink: 0,\n  // Fix IE11 issue\n  display: 'flex',\n  paddingRight: 8,\n  [`&.${stepLabelClasses.alternativeLabel}`]: {\n    paddingRight: 0\n  }\n}));\nconst StepLabelLabelContainer = styled('span', {\n  name: 'MuiStepLabel',\n  slot: 'LabelContainer',\n  overridesResolver: (props, styles) => styles.labelContainer\n})(({\n  theme\n}) => ({\n  width: '100%',\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${stepLabelClasses.alternativeLabel}`]: {\n    textAlign: 'center'\n  }\n}));\nconst StepLabel = /*#__PURE__*/React.forwardRef(function StepLabel(inProps, ref) {\n  var _slotProps$label;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepLabel'\n  });\n  const {\n      children,\n      className,\n      componentsProps = {},\n      error = false,\n      icon: iconProp,\n      optional,\n      slotProps = {},\n      StepIconComponent: StepIconComponentProp,\n      StepIconProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    alternativeLabel,\n    orientation\n  } = React.useContext(StepperContext);\n  const {\n    active,\n    disabled,\n    completed,\n    icon: iconContext\n  } = React.useContext(StepContext);\n  const icon = iconProp || iconContext;\n  let StepIconComponent = StepIconComponentProp;\n  if (icon && !StepIconComponent) {\n    StepIconComponent = StepIcon;\n  }\n  const ownerState = _extends({}, props, {\n    active,\n    alternativeLabel,\n    completed,\n    disabled,\n    error,\n    orientation\n  });\n  const classes = useUtilityClasses(ownerState);\n  const labelSlotProps = (_slotProps$label = slotProps.label) != null ? _slotProps$label : componentsProps.label;\n  return /*#__PURE__*/_jsxs(StepLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [icon || StepIconComponent ? /*#__PURE__*/_jsx(StepLabelIconContainer, {\n      className: classes.iconContainer,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(StepIconComponent, _extends({\n        completed: completed,\n        active: active,\n        error: error,\n        icon: icon\n      }, StepIconProps))\n    }) : null, /*#__PURE__*/_jsxs(StepLabelLabelContainer, {\n      className: classes.labelContainer,\n      ownerState: ownerState,\n      children: [children ? /*#__PURE__*/_jsx(StepLabelLabel, _extends({\n        ownerState: ownerState\n      }, labelSlotProps, {\n        className: clsx(classes.label, labelSlotProps == null ? void 0 : labelSlotProps.className),\n        children: children\n      })) : null, optional]\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * In most cases will simply be a string containing a title for the label.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    label: PropTypes.object\n  }),\n  /**\n   * If `true`, the step is marked as failed.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Override the default label of the step icon.\n   */\n  icon: PropTypes.node,\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    label: PropTypes.object\n  }),\n  /**\n   * The component to render in place of the [`StepIcon`](/material-ui/api/step-icon/).\n   */\n  StepIconComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`StepIcon`](/material-ui/api/step-icon/) element.\n   */\n  StepIconProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nStepLabel.muiName = 'StepLabel';\nexport default StepLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepUtilityClass(slot) {\n  return generateUtilityClass('MuiStep', slot);\n}\nconst stepClasses = generateUtilityClasses('MuiStep', ['root', 'horizontal', 'vertical', 'alternativeLabel', 'completed']);\nexport default stepClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"active\", \"children\", \"className\", \"component\", \"completed\", \"disabled\", \"expanded\", \"index\", \"last\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from './StepContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getStepUtilityClass } from './stepClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    alternativeLabel,\n    completed\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, alternativeLabel && 'alternativeLabel', completed && 'completed']\n  };\n  return composeClasses(slots, getStepUtilityClass, classes);\n};\nconst StepRoot = styled('div', {\n  name: 'MuiStep',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.alternativeLabel && styles.alternativeLabel, ownerState.completed && styles.completed];\n  }\n})(({\n  ownerState\n}) => _extends({}, ownerState.orientation === 'horizontal' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}, ownerState.alternativeLabel && {\n  flex: 1,\n  position: 'relative'\n}));\nconst Step = /*#__PURE__*/React.forwardRef(function Step(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStep'\n  });\n  const {\n      active: activeProp,\n      children,\n      className,\n      component = 'div',\n      completed: completedProp,\n      disabled: disabledProp,\n      expanded = false,\n      index,\n      last\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    activeStep,\n    connector,\n    alternativeLabel,\n    orientation,\n    nonLinear\n  } = React.useContext(StepperContext);\n  let [active = false, completed = false, disabled = false] = [activeProp, completedProp, disabledProp];\n  if (activeStep === index) {\n    active = activeProp !== undefined ? activeProp : true;\n  } else if (!nonLinear && activeStep > index) {\n    completed = completedProp !== undefined ? completedProp : true;\n  } else if (!nonLinear && activeStep < index) {\n    disabled = disabledProp !== undefined ? disabledProp : true;\n  }\n  const contextValue = React.useMemo(() => ({\n    index,\n    last,\n    expanded,\n    icon: index + 1,\n    active,\n    completed,\n    disabled\n  }), [index, last, expanded, active, completed, disabled]);\n  const ownerState = _extends({}, props, {\n    active,\n    orientation,\n    alternativeLabel,\n    completed,\n    disabled,\n    expanded,\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  const newChildren = /*#__PURE__*/_jsxs(StepRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [connector && alternativeLabel && index !== 0 ? connector : null, children]\n  }));\n  return /*#__PURE__*/_jsx(StepContext.Provider, {\n    value: contextValue,\n    children: connector && !alternativeLabel && index !== 0 ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [connector, newChildren]\n    }) : newChildren\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the step is disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Expand the step.\n   * @default false\n   */\n  expanded: PropTypes.bool,\n  /**\n   * The position of the step.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  index: integerPropType,\n  /**\n   * If `true`, the Step is displayed as rendered last.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  last: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Step;","import * as React from 'react';\n/**\n * Provides information about the current step in Stepper.\n */\nconst StepContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  StepContext.displayName = 'StepContext';\n}\n\n/**\n * Returns the current StepContext or an empty object if no StepContext\n * has been defined in the component tree.\n */\nexport function useStepContext() {\n  return React.useContext(StepContext);\n}\nexport default StepContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepperUtilityClass(slot) {\n  return generateUtilityClass('MuiStepper', slot);\n}\nconst stepperClasses = generateUtilityClasses('MuiStepper', ['root', 'horizontal', 'vertical', 'alternativeLabel']);\nexport default stepperClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepConnectorUtilityClass(slot) {\n  return generateUtilityClass('MuiStepConnector', slot);\n}\nconst stepConnectorClasses = generateUtilityClasses('MuiStepConnector', ['root', 'horizontal', 'vertical', 'alternativeLabel', 'active', 'completed', 'disabled', 'line', 'lineHorizontal', 'lineVertical']);\nexport default stepConnectorClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from '../Step/StepContext';\nimport { getStepConnectorUtilityClass } from './stepConnectorClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    alternativeLabel,\n    active,\n    completed,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, alternativeLabel && 'alternativeLabel', active && 'active', completed && 'completed', disabled && 'disabled'],\n    line: ['line', `line${capitalize(orientation)}`]\n  };\n  return composeClasses(slots, getStepConnectorUtilityClass, classes);\n};\nconst StepConnectorRoot = styled('div', {\n  name: 'MuiStepConnector',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.alternativeLabel && styles.alternativeLabel, ownerState.completed && styles.completed];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto'\n}, ownerState.orientation === 'vertical' && {\n  marginLeft: 12 // half icon\n}, ownerState.alternativeLabel && {\n  position: 'absolute',\n  top: 8 + 4,\n  left: 'calc(-50% + 20px)',\n  right: 'calc(50% + 20px)'\n}));\nconst StepConnectorLine = styled('span', {\n  name: 'MuiStepConnector',\n  slot: 'Line',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.line, styles[`line${capitalize(ownerState.orientation)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600];\n  return _extends({\n    display: 'block',\n    borderColor: theme.vars ? theme.vars.palette.StepConnector.border : borderColor\n  }, ownerState.orientation === 'horizontal' && {\n    borderTopStyle: 'solid',\n    borderTopWidth: 1\n  }, ownerState.orientation === 'vertical' && {\n    borderLeftStyle: 'solid',\n    borderLeftWidth: 1,\n    minHeight: 24\n  });\n});\nconst StepConnector = /*#__PURE__*/React.forwardRef(function StepConnector(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepConnector'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    alternativeLabel,\n    orientation = 'horizontal'\n  } = React.useContext(StepperContext);\n  const {\n    active,\n    disabled,\n    completed\n  } = React.useContext(StepContext);\n  const ownerState = _extends({}, props, {\n    alternativeLabel,\n    orientation,\n    active,\n    completed,\n    disabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(StepConnectorRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(StepConnectorLine, {\n      className: classes.line,\n      ownerState: ownerState\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepConnector.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default StepConnector;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"activeStep\", \"alternativeLabel\", \"children\", \"className\", \"component\", \"connector\", \"nonLinear\", \"orientation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getStepperUtilityClass } from './stepperClasses';\nimport StepConnector from '../StepConnector';\nimport StepperContext from './StepperContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation,\n    alternativeLabel,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, alternativeLabel && 'alternativeLabel']\n  };\n  return composeClasses(slots, getStepperUtilityClass, classes);\n};\nconst StepperRoot = styled('div', {\n  name: 'MuiStepper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.alternativeLabel && styles.alternativeLabel];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex'\n}, ownerState.orientation === 'horizontal' && {\n  flexDirection: 'row',\n  alignItems: 'center'\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.alternativeLabel && {\n  alignItems: 'flex-start'\n}));\nconst defaultConnector = /*#__PURE__*/_jsx(StepConnector, {});\nconst Stepper = /*#__PURE__*/React.forwardRef(function Stepper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepper'\n  });\n  const {\n      activeStep = 0,\n      alternativeLabel = false,\n      children,\n      className,\n      component = 'div',\n      connector = defaultConnector,\n      nonLinear = false,\n      orientation = 'horizontal'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    alternativeLabel,\n    orientation,\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  const steps = childrenArray.map((step, index) => {\n    return /*#__PURE__*/React.cloneElement(step, _extends({\n      index,\n      last: index + 1 === childrenArray.length\n    }, step.props));\n  });\n  const contextValue = React.useMemo(() => ({\n    activeStep,\n    alternativeLabel,\n    connector,\n    nonLinear,\n    orientation\n  }), [activeStep, alternativeLabel, connector, nonLinear, orientation]);\n  return /*#__PURE__*/_jsx(StepperContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(StepperRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: steps\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the active step (zero based index).\n   * Set to -1 to disable all the steps.\n   * @default 0\n   */\n  activeStep: integerPropType,\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   * @default false\n   */\n  alternativeLabel: PropTypes.bool,\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * An element to be placed between each step.\n   * @default <StepConnector />\n   */\n  connector: PropTypes.element,\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   * @default false\n   */\n  nonLinear: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stepper;","import * as React from 'react';\n/**\n * Provides information about the current step in Stepper.\n */\nconst StepperContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  StepperContext.displayName = 'StepperContext';\n}\n\n/**\n * Returns the current StepperContext or an empty object if no StepperContext\n * has been defined in the component tree.\n */\nexport function useStepperContext() {\n  return React.useContext(StepperContext);\n}\nexport default StepperContext;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["CardActionArea","React","props","ref","children","classes","className","focusVisibleClassName","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","focusVisible","focusHighlight","withStyles","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","name","CardActions","_props$disableSpacing","disableSpacing","spacing","alignItems","padding","marginLeft","CardContent","_props$component","component","Component","paddingBottom","MEDIA_COMPONENTS","CardMedia","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","Card","_props$raised","raised","Paper","elevation","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","ListContext","type","Typography","variant","color","multiline","flex","minWidth","marginTop","marginBottom","paddingLeft","useEnhancedEffect","window","ListItem","_props$alignItems","_props$autoFocus","autoFocus","_props$button","button","childrenProp","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$dense","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","_props$selected","selected","context","childContext","listItemRef","current","focus","element","muiNames","hasSecondaryAction","length","muiName","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","gutters","alignItemsFlexStart","secondaryAction","value","container","pop","justifyContent","textDecoration","boxSizing","paddingTop","borderBottom","backgroundClip","paddingRight","shortest","hover","_excluded","getScale","styles","entering","transform","entered","isWebKit154","navigator","test","userAgent","Grow","addEndListener","appear","easing","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","timeout","TransitionComponent","Transition","_objectWithoutPropertiesLoose","timer","autoTimeout","useTheme","nodeRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","handleEntering","handleEnter","isAppearing","reflow","getTransitionProps","mode","transitionDuration","delay","transitionTimingFunction","getAutoHeightDuration","clientHeight","join","handleEntered","handleExiting","handleExit","handleExited","clearTimeout","_jsx","next","setTimeout","state","childProps","visibility","muiSupportAuto","createSvgIcon","d","getStepIconUtilityClass","slot","generateUtilityClass","_circle","generateUtilityClasses","StepIconRoot","styled","SvgIcon","overridesResolver","vars","text","stepIconClasses","main","error","StepIconText","fill","contrastText","fontSize","typography","caption","fontFamily","inProps","useThemeProps","active","classNameProp","completed","icon","ownerState","slots","composeClasses","useUtilityClasses","as","Warning","CheckCircle","_jsxs","cx","cy","r","x","y","textAnchor","dominantBaseline","getStepLabelUtilityClass","StepLabelRoot","orientation","stepLabelClasses","flexDirection","cursor","StepLabelLabel","label","body2","fontWeight","StepLabelIconContainer","iconContainer","flexShrink","StepLabelLabelContainer","labelContainer","StepLabel","_slotProps$label","componentsProps","iconProp","optional","slotProps","StepIconComponentProp","StepIconComponent","StepIconProps","StepperContext","alternativeLabel","StepContext","iconContext","StepIcon","labelSlotProps","getStepUtilityClass","StepRoot","activeProp","completedProp","disabledProp","expanded","index","last","activeStep","connector","nonLinear","contextValue","newChildren","getStepperUtilityClass","getStepConnectorUtilityClass","StepConnectorRoot","StepConnectorLine","line","capitalize","borderColor","grey","StepConnector","border","borderTopStyle","borderTopWidth","borderLeftStyle","borderLeftWidth","minHeight","StepperRoot","defaultConnector","childrenArray","filter","Boolean","steps","map","step","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","module","exports","extend","copy","copyIsArray","clone","arguments","i","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","start","Position","whitespace","this","end","source","content","errorsList","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","u","b","Symbol","for","e","f","g","h","k","l","n","p","q","t","v","a","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","require","iterator","output","hasIterator","len","stringifyPosition","point","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","includes","assertNonEmpty","assertPart","stem","encoding","part","bail","getPrototypeOf","toStringTag","wrap","middleware","called","parameters","fnExpectsCallback","done","apply","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","looksLikeAVFile","includeImageAlt","one","alt","all","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","reverse","is","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","child","properties","table","rows","align","row","out","cellIndex","cell","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","shape","sizes","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontSizeAdjust","fontStretch","fontStyle","fontVariant","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","editable","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","operator","orient","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","schema","addProperty","listDepth","components","basic","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","PropTypes"],"sourceRoot":""}