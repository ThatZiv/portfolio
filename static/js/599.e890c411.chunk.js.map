{"version":3,"file":"static/js/599.e890c411.chunk.js","mappings":"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","sources":["components/Delayed.js","pages/Home.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Delayed = ({ children, wait=500 }) => {\n    const [isShown, setShown] = useState(false);\n    useEffect(() => {\n        setTimeout(() => {\n            setShown(true)\n        }, wait)\n    }, [wait])\n    return isShown ? children : null\n}\n\nexport default Delayed","import { Container, Grid, Typography, Slide, Grow, Fade, Avatar, Collapse, Zoom } from \"@mui/material\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useRef, useContext, useEffect } from \"react\";\n// import TextTransition, { presets } from \"react-text-transition\";\nimport TextLoop from \"react-text-loop\";\nimport { UserContext } from \"../contexts\"\nimport { indigo } from \"@material-ui/core/colors\";\nimport Delayed from \"../components/Delayed\";\nimport SocialMedia from \"../components/SocialMedia\";\nimport my from \"../sections\";\nimport { Button, Divider, Tooltip } from \"@material-ui/core\";\nimport pages from \"./index.js\";\nimport { capFirstLetter, sequentialItemGenerator } from \"../utils\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles({\n    root: {\n        padding: 50\n    },\n    pic: {\n        maxWidth: 400,\n        maxHeight: \"100%\"\n    },\n})\n\nconst styling = {\n    centerWhenSmall: { textAlign: { xs: \"center\", md: \"left\", sm: \"left\" } }\n}\nexport default function Home() {\n    const classes = useStyles()\n    const [state, dispatch] = useContext(UserContext)\n    const [isShown, setShown] = useState(false)\n    const containerRef = useRef(null);\n    /* const helloGen = sequentialItemGenerator(my.random.hello)\n    const [welcome, setWelcome] = useState({ value: \"Zavaar Shah\" })\n    useEffect(() => {\n        const t = setInterval(() => {\n            setWelcome(helloGen.next())\n        }, 5 * 1000)\n        return () => clearInterval(t)\n    }, [])\n     */\n    setTimeout(() => setShown(true), 1000) // Only have one 'delayed' logic just so that justify content looks good and centered before send comp renders in\n    return (<Grow in timeout={700}><div style={{ marginTop: 50 }}>\n        <Grid container\n            direction=\"row\"\n            //sx={{textAlign: \"center\"}}\n            justifyContent={isShown ? \"space-evenly\" : \"center\"}\n            alignItems=\"center\"\n            ref={containerRef}\n        >\n            {/*  xs={isShown ? 6 : 0} */}\n            <Grid item>\n                <Fade in timeout={500}>\n                    <Avatar sx={{ width: 275, height: 275, bgcolor: indigo[500] }}\n                        className={[\"Media\", classes.pic].join(\" \")}\n                        alt={my.name}\n                        src=\"/pics/me_3_prof_bg_2.jpg\" />\n                </Fade>\n            </Grid>\n            <Grid style={{ marginBottom: 10 }} sm={isShown ? 6 : 0} item>\n                <Grow timeout={1200} in={isShown} mountOnEnter unmountOnExit>\n                    <div>\n                        {/* style={{ fontFamily: \"Blinker, sans-serif\" }}  */}\n                        <Typography variant=\"h3\" sx={styling.centerWhenSmall}\n                            style={{ fontFamily: \"Blinker, sans-serif\", marginTop: 10 }} component=\"div\">\n                            <TextLoop children={my.random.hello} interval={5000}/>\n                        </Typography>\n\n                        <Typography color=\"gray\" sx={styling.centerWhenSmall} variant=\"body1\">{my.caption}</Typography>\n                        {/*  <Typography variant=\"h2\" >\n                            <span>{welcome.value}</span>.\n                        </Typography> */}\n                    </div>\n                </Grow>\n                {/* \n<Grow timeout={1200} in={isShown} mountOnEnter unmountOnExit>\n                    <Typography style={{ fontFamily: \"Blinker, sans-serif\" }} variant=\"h3\" component=\"div\">Welcome.</Typography>\n                </Grow>\n                <Delayed wait={2750}>\n                    <Slide timeout={750} direction=\"up\" container={containerRef.current} in>\n                        <div>\n                            <Typography color=\"gray\" variant=\"body1\">My name is {my.name}.</Typography>\n                            <Typography variant=\"subtitle1\" >\n                                {my.preamble}\n                            </Typography>\n                        </div>\n                    </Slide>\n                </Delayed> */}\n                <Delayed wait={1000}>\n                    <Fade in timeout={4500} mountOnEnter unmountOnExit>\n                        <Grid container spacing={1}>\n                            <Grid item>\n                                <SocialMedia showName icon=\"envelope\" name=\"Email\" url=\"mailto:zavaar.shah123@gmail.com\" />\n                            </Grid>\n                            <Grid item>\n                                <SocialMedia showName url=\"https://www.linkedin.com/in/zavaar-shah\" confirmation />\n                            </Grid>\n                            <Grid item>\n                                <SocialMedia showName url=\"https://github.com/thatziv\" confirmation />\n                            </Grid>\n                            {pages.map(({ label, location, icon }) => (\n                                label !== \"home\" && <Grid item>\n                                    <Tooltip title={capFirstLetter(label)}>\n                                        <Link style={{ textDecoration: \"none\" }} to={location}>\n                                            <Button style={{ backgroundColor: indigo[500], color: \"#fdfdfd\", marginTop: 4 }}> {/* Match the style with the \"SocialMedia.js\" btns */}\n                                                <icon className={icon} />&nbsp;&nbsp;<div>{capFirstLetter(label)}</div>\n                                            </Button>\n                                        </Link>\n                                    </Tooltip>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Fade>\n                </Delayed>\n            </Grid>\n\n            <Grid item md={isShown ? 10 : 0} sm={isShown ? 10 : 0} xs={isShown ? 12 : 0}>\n                <Slide in={isShown} container={containerRef.current} direction=\"up\" timeout={350} mountOnEnter unmountOnExit>\n                    <div>\n                        <Divider style={{ marginTop: 12 }} />\n                        <my.skills />\n                    </div>\n                </Slide>\n            </Grid>\n\n        </Grid>\n    </div></Grow>)\n}"],"names":["_ref","children","_ref$wait","wait","_useState","useState","_useState2","_slicedToArray","isShown","setShown","useEffect","setTimeout","useStyles","makeStyles","root","padding","pic","maxWidth","maxHeight","styling","centerWhenSmall","textAlign","xs","md","sm","Home","classes","_useContext","useContext","UserContext","_useContext2","containerRef","useRef","_jsx","Grow","in","timeout","style","marginTop","_jsxs","Grid","container","direction","justifyContent","alignItems","ref","item","Fade","Avatar","sx","width","height","bgcolor","indigo","className","join","alt","my","src","marginBottom","mountOnEnter","unmountOnExit","Typography","variant","fontFamily","component","TextLoop","interval","color","Delayed","spacing","SocialMedia","showName","icon","name","url","confirmation","pages","label","location","Tooltip","title","capFirstLetter","Link","textDecoration","to","Button","backgroundColor","Slide","current","Divider"],"sourceRoot":""}